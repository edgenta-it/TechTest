name: main-branch-pipeline
on:
  push:
    branches:
      - 'main'
jobs:
  run-sonarqube-scan:
    name: Code analyze API and xUnit using SonarQube
    runs-on: [self-hosted, azure]

    steps:
      - uses: actions/checkout@v4
        with:
         fetch-depth: 0
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
         dotnet-version: '6.0.x'
      - name: Install dependencies
        run: dotnet restore
      - name: Import Secrets from Vault
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            tech-coe-dev/data/technologyone/tech-test SONAR_PROJECT_KEY | SONAR_PROJECT_KEY ;
            tech-coe-dev/data/edgenta-it SONAR_HOST_URL | SONAR_HOST_URL ;
            tech-coe-dev/data/edgenta-it SONAR_TOKEN | SONAR_TOKEN
      - name: Begin SonarQube Scanning
        run: dotnet /home/devopsteam/sonar-scanner/SonarScanner.MSBuild.dll begin /k:${{ env.SONAR_PROJECT_KEY }} /d:sonar.host.url=${{ env.SONAR_HOST_URL }} /d:sonar.login=${{ env.SONAR_TOKEN }} /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
      - name: Build with dotnet
        run: dotnet build
      - name: Test with dotnet 
        run: dotnet test
      - name: End SonarQube Scanning
        run: dotnet /home/devopsteam/sonar-scanner/SonarScanner.MSBuild.dll end /d:sonar.login=${{ env.SONAR_TOKEN }}